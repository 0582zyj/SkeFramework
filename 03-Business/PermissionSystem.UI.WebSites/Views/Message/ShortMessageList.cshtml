@{
    ViewBag.Title = "短信列表";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
 <!-- Content Header (Page header) -->
<section class="content-header">
    <h1>短信列表</h1>
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Home")"><i class="fa fa-home"></i> 主页</a></li>
        <li><a href="javascript:void(0);"><i class="fa fa-bar-chart"></i> 短信管理</a></li>
    </ol>
</section>
<!-- Main content -->
<section class="content" id="section-content">
    <div class="row">
        <div class="col-md-12">
            <div class="box">
                <div class="box-body">
                   <div class="form-inline">
                       <div class="form-group">
                           <input type="text" class="form-control" placeholder="关键字" v-model="search.keywords">
                       </div>
                       <div class="form-group">
                         <button class="btn btn-default" id="alert-search" v-on:click="btnSearch">
                            <i class="fa fa-search"></i> 查询
                         </button>
                       </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="box" >
                <!--数据列表页头部-->
                <div class="box-header with-border">
                </div>
                <!-- /.box-header -->
                <div class="box-body table-responsive">
                    <table id="j-alert-table" class="table table-hover table-bordered datatable">
                        <thead>
                            <tr class="show-datatable-list-title">
                                <th>ID</th>
                                <th>应用ID</th>
                                <th>手机号码</th>
                                <th>模板ID</th>
                                <th>参数</th>
                                <th>消息</th>
                                <th>类型</th>
                                <th>运行状态</th>
                                <th>处理结果</th>
                                <th>创建时间</th>
                                <th>处理时间</th>
                                <th>到达时间</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="item in dataList">
                                <td>{{item.id}}</td>
                                <td>{{item.AppId}}</td>
                                <td>{{item.Mobile}}</td>
                                <td>{{item.TemplateId}}</td>
                                <td>{{item.Params}}</td>
                                <td>{{item.Message}}</td>
                                <td>{{item.Type}}</td>
                                <td>{{item.Status}}</td>
                                <td>{{item.HandleResult}}</td>
                                <td>{{item.InputTime|dateFormat('yyyy-MM-dd hh:mm:ss')}}</td>
                                <td>{{item.HandleTime|dateFormat('hh:mm:ss')}}</td>
                                <td>{{item.AvailTime|dateFormat('yyyy-MM-dd hh:mm:ss')}}</td>
                            </tr>
                        </tbody>
                        <!--insert tbody here-->
                    </table>
                </div>
                <templatepage v-on:getdata="GetList" url="@Url.Action("GetRtShortMessageList", "Message")" v-bind:prop="prop"></templatepage>
            </div>
        </div>
        <!-- /.box -->
    </div>
</section>
<!-- /.content -->
<script>
        var vm = new Vue({
            el: "#section-content",
            data: {
                GetListUrl: "@Url.Action("GetRtShortMessageList", "Message")",
                dataList: [],
                search: { keywords: ""}
            },
            filters: {
                dateFormat: function (value, fmt) {
                    let getDate = eval('new ' + (value.replace(/\//g, '')));
                    let o = {
                        'M+': getDate.getMonth() + 1,
                        'd+': getDate.getDate(),
                        'h+': getDate.getHours(),
                        'm+': getDate.getMinutes(),
                        's+': getDate.getSeconds(),
                        'q+': Math.floor((getDate.getMonth() + 3) / 3),
                        'S': getDate.getMilliseconds()
                    };
                    if (/(y+)/.test(fmt)) {
                        fmt = fmt.replace(RegExp.$1, (getDate.getFullYear() + '').substr(4 - RegExp.$1.length))
                    }
                    for (let k in o) {
                        if (new RegExp('(' + k + ')').test(fmt)) {
                            fmt = fmt.replace(RegExp.$1, (RegExp.$1.length === 1) ? (o[k]) : (('00' + o[k]).substr(('' + o[k]).length)))
                        }
                    }
                    return fmt;
                }
            },
            computed: {
                prop: function () {
                    return { keywords: this.search.keywords }
                }
            },
            methods: {
                GetList: function (data) {
                    this.dataList = data;
                },
                btnSearch: function () {
                    if (this.$children.length > 0) {
                        this.$children[0].go(1);
                    }
                }
            }
        });
</script>

